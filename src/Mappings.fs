module Mappings

let htmlNames =
    [
        "fieldset", "fieldSet"
        "use", "use'"
    ]
    |> Map.ofList

let propNames =
    [
        "begin", "begin'"
        "end", "end'"
        "for", "for'"
        "hreflang", "hrefLang"
        "checked", "isChecked"
        "open", "isOpen"
        "span", "spam"
        "srclang", "srcLang"
        "to", "to'"
        "type", "type'"
    ]
    |> Map.ofList

let propertyTypes =
    [
        "amplitude", "float"
        "amplitude", "int"
        "async", "bool"
        "autoFocus", "bool"
        "autoPlay", "bool"
        "azimuth", "float"
        "azimuth", "int"
        "baseFrequency", "float"
        "baseFrequency", "int"
        "bias", "float"
        "bias", "int"
        "by", "float"
        "by", "int"
        "capture", "bool"
        "cols", "int"
        "colSpan", "int"
        "contentEditable", "bool"
        "controls", "bool"
        "cx", "float"
        "cx", "int"
        "cy", "float"
        "cy", "int"
        "defaultChecked", "bool"
        "defaultValue", "bool"
        "defaultValue", "float"
        "defaultValue", "int"
        "defer", "bool"
        "diffuseConstant", "float"
        "diffuseConstant", "int"
        "disabled", "bool"
        "divisor", "float"
        "divisor", "int"
        "download", "bool"
        "draggable", "bool"
        "dx", "float"
        "dx", "int"
        "dy", "float"
        "dy", "int"
        "elevation", "float"
        "elevation", "int"
        "exponent", "float"
        "exponent", "int"
        "fillOpacity", "float"
        "fillOpacity", "int"
        "fontSize", "float"
        "fontSize", "int"
        "from", "float"
        "from", "int"
        "fr", "float"
        "fr", "int"
        "fx", "float"
        "fx", "int"
        "fy", "float"
        "fy", "int"
        "hidden", "bool"
        "height", "float"
        "height", "int"
        "high", "float"
        "high", "int"
        "id", "int"
        "intercept", "float"
        "intercept", "int"
        "checked", "bool"
        "open", "bool"
        "k1", "float"
        "k1", "int"
        "k2", "float"
        "k2", "int"
        "k3", "float"
        "k3", "int"
        "k4", "float"
        "k4", "int"
        "key", "int"
        "limitingConeAngle", "float"
        "limitingConeAngle", "int"
        "loop", "bool"
        "low", "float"
        "low", "int"
        "max", "float"
        "max", "int"
        "maxLength", "int"
        "min", "float"
        "min", "int"
        "minLength", "int"
        "multiple", "bool"
        "muted", "bool"
        "nomodule", "bool"
        "numOctaves", "int"
        "offset", "float"
        "offset", "int"
        "optimum", "float"
        "optimum", "int"
        "order", "int"
        "pathLength", "int"
        "playsInline", "bool"
        "pointsAtX", "float"
        "pointsAtX", "int"
        "pointsAtY", "float"
        "pointsAtY", "int"
        "pointsAtZ", "float"
        "pointsAtZ", "int"
        "preserveAlpha", "bool"
        "r", "float"
        "r", "int"
        "radius", "float"
        "radius", "int"
        "readOnly", "bool"
        "required", "bool"
        "rows", "int"
        "rowSpan", "int"
        "rx", "float"
        "rx", "int"
        "ry", "float"
        "ry", "int"
        "scale", "float"
        "scale", "int"
        "seed", "float"
        "seed", "int"
        "selected", "bool"
        "selectionStart", "int"
        "size", "int"
        "span", "int"
        "spellcheck", "bool"
        "specularConstant", "float"
        "specularConstant", "int"
        "specularExponent", "float"
        "specularExponent", "int"
        "stdDeviation", "float"
        "stdDeviation", "int"
        "step", "float"
        "step", "int"
        "stopOpacity", "float"
        "stopOpacity", "int"
        "strokeWidth", "float"
        "strokeWidth", "int"
        "surfaceScale", "float"
        "surfaceScale", "int"
        "tabIndex", "int"
        "targetX", "int"
        "targetY", "int"
        "children", "float"
        "children", "int"
        "textLength", "float"
        "textLength", "int"
        "value", "bool"
        "value", "float"
        "value", "int"
        "values", "float"
        "values", "int"
        "width", "float"
        "width", "int"
        "x", "float"
        "x", "int"
        "x1", "float"
        "x1", "int"
        "x2", "float"
        "x2", "int"
        "y", "float"
        "y", "int"
        "y1", "float"
        "y1", "int"
        "y2", "float"
        "y2", "int"
        "z", "float"
        "z", "int"
    ]
    |> List.groupBy fst
    |> List.map (fun (name, values) -> name, values |> List.map snd)
    |> Map.ofList
